$color1: #7C4DFF;
$color2: rgb(237, 231, 224);
$color3: #333333;
$color4: #7C4DFF;
$color5: #EDE7F6;

@mixin easeOut {
  transition: all .6s cubic-bezier(0.23, 1, 0.32, 1);
}

@mixin break {
  @media screen and (max-width: 760px) {
    @content;
  }
}

* {
  box-sizing: border-box;
}

.strips {
  min-height: 80vh;
  text-align: center;
  overflow: hidden;
  color: white;
  
  &__strip {
    will-change: width, left, z-index, height;
    position: absolute;
    width: 20%;
    min-height: 80vh;
    overflow: hidden;
    cursor: pointer;
    @include easeOut;
    
    &:nth-child(1) {
      left: 0;
    }
    
    &:nth-child(2) {
      left: 20vw;
    }
    
    &:nth-child(3) {
      left: 40vw;
    }
    
    &:nth-child(4) {
      left: 60vw;
    }
    
    &:nth-child(5) {
      left: 80vw;
    }
    
    &:nth-child(1) {
      .strip__content {
        background: $color1;
        transform: translate3d(-100%, 0, 0);
        animation-name: strip1;
        animation-delay: 0.1s;
      }
    }
    
    &:nth-child(2) {
      .strip__content {
        background: $color2;
        transform: translate3d(0, 100%, 0);
        animation-name: strip2;
        animation-delay: 0.2s;
      }
    }
    
    &:nth-child(3) {
      .strip__content {
        background: $color3;
        transform: translate3d(0, -100%, 0);
        animation-name: strip3;
        animation-delay: 0.3s;
      }
    }
    
    &:nth-child(4) {
      .strip__content {
        background: $color4;
        transform: translate3d(0, 100%, 0);
        animation-name: strip4;
        animation-delay: 0.4s;
      }
    }
    
    &:nth-child(5) {
      .strip__content {
        background: $color5;
        transform: translate3d(100%, 0, 0);
        animation-name: strip5;
        animation-delay: 0.5s;
      }
    }
    
    @include break {
      min-height: 20vh;
      &:nth-child(1) {
        top: 0;
        left: 0;
        width: 100%;
      }

      &:nth-child(2) {
        top: 20vh;
        left: 0;
        width: 100%;
      }

      &:nth-child(3) {
        top: 40vh;
        left: 0;
        width: 100%;
      }

      &:nth-child(4) {
        top: 60vh;
        left: 0;
        width: 100%;
      }

      &:nth-child(5) {
        top: 80vh;
        left: 0;
        width: 100%;
      }
    }
  }
  
  .strip__content {
    animation-duration: 1s;
    animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
    animation-fill-mode: both;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    text-decoration: none;

    &:hover {
      &:before {
        transform: skew(-30deg) scale(3) translate(0, 0);
        opacity: 0.1;
      }
    }

    &:before {
      content: "";
      position: absolute;
      z-index: 1;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: white;
      opacity: 0.05;
      transform-origin: center center;
      transform: skew(-30deg) scaleY(1) translate(0, 0);
      @include easeOut;
    }
  }
  
  .strip__inner-text {
    will-change: transform, opacity;
    position: absolute;
    z-index: 5;
    top: 50%;
    left: 50%;
    width: 70%;
    transform: translate(-50%,-50%) scale(0.5);
    opacity: 0;
    @include easeOut;
  }
  
  &__strip--expanded {
    width: 100%;
    top: 0 !important;
    left: 0 !important;
    z-index: 3;
    cursor: default;
    
    @include break {
      min-height: 100vh;
    }
    
    .strip__content {
      &:hover {
        &:before {
          transform: skew(-30deg) scale(1) translate(0, 0);
          opacity: 0.05;
        }
      }
    }
    
    .strip__title {
      opacity: 0;
    }
    
    .strip__inner-text {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
  }
}

.strip__title {
  display: block;
  margin: 0;
  position: relative;
  z-index: 2;
  width: 100%;
  font-size: 3.5vw;
  color: white;
  @include easeOut;
  
  @include break {
    font-size: 28px;
  }
}

.strip__close {
  position: absolute;
  right: 0;
  top: 20vh;
  opacity: 0;
  z-index: 10;
  @include easeOut;
  cursor: pointer;
  transition-delay: 0.5s;
  
  &--show {
    opacity: 1;
  }
}

@keyframes strip1 {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
  
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes strip2 {
  0% {
    transform: translate3d(0, 100%, 0);
  }
  
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes strip3 {
  0% {
    transform: translate3d(0, -100%, 0);
  }
  
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes strip4 {
  0% {
    transform: translate3d(0, 100%, 0);
  }
  
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes strip5 {
  0% {
    transform: translate3d(100%, 0, 0);
  }
  
  100% {
    transform: translate3d(0, 0, 0);
  }
}

//
$vertPad: 80px;
$sidePad: 70px;

$numOfEls: 5;
$elMrg: 1%;

$initAT: 1s;
$initDelayStep: 0.1s;
$fullInitAT: $initAT + $initDelayStep * ($numOfEls - 1);
$moveAT: 0.6s;
$expandAT: 0.7s;
$expandDelay: 0.1s;
$bgScaleAT: 0.8s;
$fadeoutAT: $moveAT + $expandAT/2;
$indexHoverAT: 0.5s;
$closeBtnAT: 0.3s;
$closeBtnLineDelay: 0.15s;
$fullExpandAT: $moveAT + $expandDelay + $expandAT;
$contentFadeinAT: 0.5s;

@mixin elHover {
  .el:hover & {
    @content;
  }
}

@mixin elActive {
  .el.s--active & {
    @content;
  }
}

@mixin contInactive {
  .cont.s--inactive & {
    @content;
  }
}

@mixin contElActive {
  .cont.s--el-active & {
    @content;
  }
}

.el {
  $elW: (100% - $elMrg * ($numOfEls - 1)) / $numOfEls;
  $elMrgRel: percentage($elMrg / $elW);
  
  position: absolute;
  left: 0;
  top: 50vh;
  width: $elW;
  height: 30%;
  transition: transform $moveAT $expandAT, width $expandAT, opacity $moveAT $expandAT, z-index 0s $moveAT + $expandAT;
  will-change: transform, width, opacity;

  &:not(.s--active) {
    cursor: pointer;
  }
  
  &__overflow {
    overflow: hidden;
    position: relative;
    height: 100%;
  }

  &__inner {
    overflow: hidden;
    position: relative;
    height: 100%;
    transition: transform $initAT;

    @include contInactive {
      transform: translate3d(0,100%,0);
    }
  }

  &__bg {
    position: relative;
    width: calc(100vw - #{$sidePad * 2});
    height: 100%;
    transition: transform $moveAT $expandAT;
    will-change: transform;

    &:before {
      content: "";
      position: absolute;
      left: 0;
      top: -5%;
      width: 100%;
      height: 110%;
      background-size: cover;
      background-position: center center;
      transition: transform $initAT;
      transform: translate3d(0,0,0) scale(1);

      @include contInactive {
        transform: translate3d(0,-100%,0) scale(1.2);
      }

      @include elActive {
        transition: transform $bgScaleAT;
      }
    }
    
    &:after {
      $opacityAT: 0.5s;
      
      content: "";
      z-index: 1;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.3);
      opacity: 0;
      transition: opacity $opacityAT;
      
      @include contElActive {
        transition: opacity $opacityAT $fullExpandAT;
        opacity: 1 !important;
      }
    }
  }
  
  &__index {
    overflow: hidden;
    position: absolute;
    left: 0;
    bottom: $vertPad * -1;
    width: 100%;
    height: 50%;
    min-height: 250px;
    text-align: center;
    font-size: 100vw / $numOfEls;
    line-height: 0.85;
    font-weight: bold;
    transition: transform $indexHoverAT, opacity $moveAT/2 $expandAT + $expandDelay + $moveAT;
    transform: translate3d(0,1vw,0);
    
    @include elHover {
      transform: translate3d(0,0,0);
    }
    
    @include contElActive {
      transition: transform $indexHoverAT, opacity $moveAT/2;
      opacity: 0;
    }
    
    &-back,
    &-front {
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
    }
   
    &-back {
      color: #2f3840;
      opacity: 0;
      transition: opacity $indexHoverAT/2 $indexHoverAT/2;
      
      @include elHover {
        transition: opacity $indexHoverAT/2;
        opacity: 1;
      }
    }
    
    &-overlay {
      overflow: hidden;
      position: relative;
      transform: translate3d(0,100%,0);
      transition: transform $indexHoverAT 0.1s;
      color: transparent;
      
      &:before {
        content: attr(data-index);
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        color: #fff;
        transform: translate3d(0,-100%,0);
        transition: transform $indexHoverAT 0.1s;
      }
      
      @include elHover {
        transform: translate3d(0,0,0);
        
        &:before {
          transform: translate3d(0,0,0);
        }
      }
    }
  }
  
  &:hover {
    
    .el__bg:after {
      opacity: 0;
    }
  }

  &.s--active {
    z-index: 1;
    width: 100%;
    transform: translate3d(0,0,0);
    transition: transform $moveAT, width $expandAT $moveAT + $expandDelay, z-index 0s;

    .el__bg {
      transform: translate3d(0,0,0);
      transition: transform $moveAT;

      &:before {
        transition-delay: $moveAT;
        transform: scale(1.1);
      }
    }
  }
}