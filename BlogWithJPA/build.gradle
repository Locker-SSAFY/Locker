plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.locker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// swagger
	implementation 'io.springfox:springfox-swagger2:2.6.1'
	implementation 'io.springfox:springfox-swagger-ui:2.6.1'

	// security + oauth2
	implementation 'org.springframework.cloud:spring-cloud-starter-security:2.1.2.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2:2.1.2.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-oauth2-client')

	// jwt
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// gson
	implementation 'com.google.code.gson:gson'

	// Internationalization (i18n)
	implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'

	compile 'mysql:mysql-connector-java'				// mysql
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	// mybatis
	compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'
}


test {
	useJUnitPlatform()
}